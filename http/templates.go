// Code generated by go-bindata.
// sources:
// templates/dashboard.html
// DO NOT EDIT!

package http

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDashboardHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x7a\xeb\x72\xe3\xb6\x92\xf0\x6f\xf9\x29\x10\x4e\xe6\x93\x7c\x22\x82\x17\xdd\x69\x49\xa7\x32\x1e\x4f\xe6\xd4\x57\xb9\x54\x32\x67\x53\x5b\x5e\xd7\x14\x44\x42\x22\xc6\x20\xc0\x80\xa0\x2f\xd1\xea\x9d\xf6\x19\xf6\xc9\xb6\x1a\x20\x29\x4a\x96\x27\xce\x9e\x39\x5b\xbb\x76\x95\x44\xa2\xef\x8d\x46\x77\x03\xd0\xfc\xab\xb7\x3f\x5e\x7e\xf8\xd7\x9f\xae\x50\xaa\x33\xbe\x3c\x9b\xc3\x17\x12\x1b\x97\xe4\xf9\xc2\xa1\x19\x13\x54\x39\x30\x4c\x49\xb2\x3c\xeb\xcc\x33\xaa\x09\x4a\xb5\xce\x5d\xfa\x5b\xc9\xee\x16\x4e\x2c\x85\xa6\x42\xbb\xfa\x31\xa7\x0e\xaa\xde\x16\x8e\xa6\x0f\xda\x03\x5e\x17\x28\x4e\x89\x2a\xa8\x5e\xfc\xfd\xc3\x3b\x77\xea\x34\x4c\xea\x61\xa7\xd4\xeb\x6a\x5c\x33\xcd\xe9\xf2\xca\x08\x45\x2e\x7a\x4b\x8a\x74\x25\x89\x4a\xe6\x9e\x85\xd4\xa4\x82\x64\x74\xe1\x6c\xa8\xa0\x8a\x68\xa9\x5a\x62\xdf\x48\xa9\x73\xfe\xe8\x20\xef\x08\xf9\x8e\xd1\xfb\x5c\x2a\xdd\xc2\xbd\x67\x89\x4e\x17\x09\xbd\x63\x31\x75\xcd\x4b\x1f\x31\xc1\x34\x23\xdc\x2d\x62\xc2\xe9\x22\xe8\xa3\x8c\x3c\xb0\xac\xcc\xea\x01\xa3\x26\x67\xe2\x16\xa5\x8a\xae\x17\x8e\xe7\x65\xe4\x21\x4e\x04\x5e\x49\xa9\x0b\xad\x48\x0e\x2f\xb1\xcc\x3c\x33\x70\x4f\x74\x9c\x7a\x03\x3c\xc0\x13\x2f\x96\x45\x26\xbd\x06\x0f\x67\x4c\xe0\xb8\x28\x1c\xa4\x28\x5f\x38\x85\x7e\xe4\xb4\x48\x29\xd5\x46\xc4\x57\xae\x7b\xcd\xd6\x88\x6b\xf4\xb7\x2b\x34\xbb\x81\xa1\x22\x56\x2c\xd7\xa8\x50\x31\x88\x05\xd7\x8e\x8a\x94\x65\x78\x23\xe5\x86\xd3\x58\x26\xd4\xc8\x2d\xee\x84\xa7\x55\x29\x6e\x2d\x0a\xfe\x54\x38\xcb\xb9\x67\x89\x0d\xe7\x6b\x2a\x12\xb6\xbe\x71\x5d\xc3\x14\xc4\x2e\xcf\x3a\x80\xdb\x3f\xeb\xac\x64\xf2\x88\xb6\x67\x9d\x4e\x4a\xd9\x26\xd5\x11\x0a\x7c\xff\xf5\xc5\x59\x67\x77\x76\xd6\x79\x75\xaf\x48\x6e\x80\x19\x13\xee\x11\x42\x43\x40\x4a\x2d\xd1\x57\x2c\x03\x5f\x13\xa1\x2f\x9e\xf2\xea\x78\x7f\x41\x3f\xd0\x0d\xd1\xec\x8e\x22\x26\x12\x2a\x34\x5a\x4b\xa9\xa9\x42\xab\x47\xc4\x74\x81\x2c\x01\xfa\x8b\x07\xb2\x88\xda\x30\x11\x21\xdf\x72\x76\xc7\x7e\xfe\x50\x31\xf9\x89\x24\x68\x25\xb5\x96\x19\x10\x56\x2c\xda\xb4\x39\x49\x12\x26\x36\x40\xec\xa3\x8a\xd0\x58\x52\xe1\xb6\x0d\xad\xf9\xae\x48\x7c\xbb\x51\xb2\x14\x89\x1b\x4b\x2e\x55\x84\x5e\xad\x47\xf0\x7f\xd1\x66\x18\xb6\x98\x19\xb7\x2c\x11\x86\xb8\x22\x26\x72\xb7\x6d\x54\x60\x8c\x82\x51\xfe\x80\x7c\x43\xd1\x69\x21\xe2\x58\xd1\x84\x69\xeb\xd4\xca\x50\x60\x5d\xa1\xee\x35\x7d\x8e\xbd\xcb\xe9\x1a\x3c\x3b\xb2\xca\xd7\xa3\xaa\x72\xf8\xa8\xd1\x12\xc2\xc3\x10\xae\xa5\xd0\x6e\xc1\x7e\xa7\x11\x9a\x36\x53\x8b\x95\xbc\x77\x63\x2a\x34\x55\x34\x39\xd0\x06\x9c\x7e\x61\xde\x1f\xec\x12\xd9\x4f\xa3\x45\x71\xb5\xcc\x23\x34\x6a\x38\xc5\x92\xbb\x59\xe2\x0e\x0d\x17\x48\x02\x2e\xe1\x6c\x23\x22\x64\xd9\xd7\x68\x2b\xa9\x92\xca\x14\xfb\x58\xeb\x1c\xe6\x0f\xa8\x90\x9c\x25\xe8\x15\x9d\xc0\xff\x09\xbb\x8e\xac\xb5\x3e\xd8\xdb\x9a\x0e\xb0\x11\x5c\x94\x71\x4c\x8b\xe2\xd8\xec\x70\xd8\x60\xe2\x9c\x08\xca\x9f\xc4\x74\x38\xf0\xdb\x28\x1b\xea\x42\xf6\xab\xd4\x6d\x9b\xdd\xc2\x4b\x87\xc7\x72\x82\x69\x05\xec\xcc\xbd\x7a\x99\x1d\x2d\xe2\x38\x11\x9f\x0a\x1c\x73\x59\x26\x6b\x4e\x94\x5d\xc0\xe4\x13\x79\xf0\x38\x5b\x15\x1e\x11\x9b\x92\x13\x85\x3f\x15\x5e\x80\xc7\x78\xd8\x1a\x68\xaf\xe9\xb9\x67\x93\xf3\xdc\xac\x5e\xb1\x71\x21\x54\x94\xe4\x9c\x2a\xc8\x2b\x44\x17\x97\x5a\xf1\x3a\xad\xa0\x5f\x21\x5e\x09\xe7\x08\x2c\xab\xb3\x21\x4a\xa9\xa2\xc8\xe6\x84\x84\xdd\x21\x96\x2c\x1c\x08\x6c\x67\x79\x76\xd6\xb1\x74\xef\xd8\x03\x4d\x90\x20\x77\x2b\xa2\x2c\xa6\x45\x8d\x39\x29\x8a\x85\x53\x01\xec\x97\x9b\xd0\x35\x29\xb9\xae\x5f\xd7\x40\x0b\x3e\x03\x2d\x0e\xe9\x9a\xb8\xb6\xa0\x13\x3c\x2b\xef\x57\xf0\xce\x7c\x55\x6a\x2d\x05\x82\x82\xb3\x70\xec\x8b\x73\x44\xa1\xe5\x66\xc3\xa9\x83\x12\xa2\x49\xf5\x02\x92\x38\x27\x79\xd1\x0c\x13\xb5\x81\xf2\x83\x2b\x9a\x06\x5c\xc9\xe9\xcc\x8b\x9c\x88\x9a\x31\x8b\xa5\x70\x57\x44\x19\xc7\xe7\x44\x7c\x71\xa4\xb9\x67\x4d\xa9\x5f\xc9\x91\x49\x2b\x45\x44\xe2\xd4\x65\xc7\xa9\xab\x64\xef\xfa\x1a\xdf\x4b\x75\x4b\xd5\x47\x28\x74\x37\x37\xe7\x73\x8f\x54\x9e\xf4\x12\x76\xf7\xd4\xa9\xb5\x9d\xe8\x19\xbb\xe7\x25\x6f\x89\xae\xb1\x04\xb9\xdb\x3b\x86\xb3\x1a\x83\xc4\x90\xc6\x9d\xe5\x9c\xec\x35\x6b\x95\x6d\xb2\x9c\x7b\x9c\xb5\xe8\xf6\x88\xaf\x52\xca\x73\x67\xf9\x9e\xf2\xfc\x08\x6f\xee\x95\xfc\x8f\x74\xa9\x1f\x4d\x46\x68\x34\x6f\xf3\x87\x1e\xa5\x88\x3c\x6f\xc3\x74\x5a\xae\xcc\xca\xa2\x3a\x25\x45\xea\xd9\xa6\xc6\x55\x94\x53\x02\xd1\x50\x07\xc2\xc7\x15\x27\xe2\xd6\x41\x66\xb1\x2e\x9c\x3a\xbd\xc0\x4a\x0f\x60\xa1\xd7\x03\xb6\xe6\x44\x83\xfc\xc1\x59\xce\x8b\xbb\x0d\xaa\x29\xd6\x8c\xf3\xe8\x3e\x65\x9a\x3a\x88\x28\x46\xdc\x94\x25\x09\x15\x0b\x47\xab\x92\x3a\x55\x69\x5a\x38\x83\xd0\x41\x77\x54\x15\x4c\x8a\x85\x13\xe0\xc0\x41\xd0\x9c\xbc\x91\x0f\x0b\x07\x0a\x55\x30\x46\xc1\xd8\x41\xb6\x3b\x01\xe4\xe5\x3c\x27\x3a\x45\xc0\xdd\x55\x25\x08\xa2\x77\x54\xc8\x24\x71\x50\xb2\x70\xbe\x9f\x22\xff\x72\x80\x47\x53\x53\xe5\xaa\x87\x69\x6c\x1e\x87\x28\xc4\xe1\x0c\x8d\xf1\x68\x80\x46\x78\x38\x41\x13\x3c\x9a\xe1\x21\xf6\x27\x78\x34\x72\x71\x60\xbf\x06\x53\xe4\xbb\x38\x98\xb9\xd8\x0f\x5c\x3c\x0d\xcd\x77\x80\x87\x33\x37\xc4\x7e\x80\x07\x13\x37\xc4\xa3\x81\x6b\x07\xc6\x33\x17\xcf\x86\x2e\xf6\x67\x2e\x0e\x61\x70\x6a\xdf\xa7\xa1\x1b\xe0\x60\xe0\xe2\x70\xea\xe2\x60\xe4\xe2\xf1\xd4\xc5\x23\xcb\x0b\x8f\x06\x78\x3c\x80\x47\x14\x60\x7f\x0a\x2a\x06\x38\x1c\xe0\x69\x88\x27\x21\x3c\xc2\xf8\x74\x82\xa7\x13\x14\xe2\xc1\x00\x8f\xc7\xd8\x9f\x00\xb5\x61\x36\x9d\xe0\x11\xe8\xe3\x4f\xdc\x00\x4f\xa6\x2e\x0e\xdd\x01\x1e\x83\xc8\x99\x7d\x18\xe0\xd9\x08\x2c\x98\x4e\xf0\x00\x10\x47\x33\xd0\x26\x34\x5a\xf8\x06\x1f\x0f\xc6\xc0\x20\x84\xd7\x10\x07\xa1\x71\x15\x1e\x4f\x5c\x10\x1d\xe2\x10\x34\x01\x8e\x01\x28\x36\x08\x5d\x1c\x4e\x90\xf9\xc4\x63\xf0\x66\x80\x07\x63\xec\xcf\x50\x88\x00\x10\x80\x33\x02\xec\x1b\xe7\x82\xe1\xf5\x37\x1e\x0e\x51\x80\x03\x0c\x13\x88\x67\x20\x0c\x81\x30\x3c\x0a\xf0\x68\x0c\x78\x01\x70\x34\xf8\xc1\xc8\xcc\x95\x31\x69\x3a\x41\x03\x3c\x19\x81\x2d\x23\x04\xb6\xe0\x70\x86\xc3\x11\x1e\x0d\xf1\xc4\xcc\x61\x80\x87\x56\x0b\x70\x8a\xf1\xe1\xcc\x3a\x33\xc4\x60\x09\x0e\x03\x1c\x8c\xf0\x70\x8c\x47\x23\x3c\x98\x7e\x3b\xc5\x7e\x30\x40\xf6\xd3\x47\x55\x44\x4d\x63\xdf\x1d\xe2\x21\xb8\x6e\x34\x75\xcd\xff\xef\x90\x80\x20\xb2\x20\x0f\xdd\x6d\x96\xcf\xae\xc2\x7d\x1e\x69\x9e\xf6\x0f\x50\x19\xde\xd0\x0d\x13\x87\xe5\xe4\x69\x7d\x38\xca\xf3\x06\x24\x36\x2e\x5b\x57\x35\x0a\x53\xa5\x4c\x2b\x5f\x25\x16\x4e\x95\x46\xe6\xd3\x4d\x88\xd8\xec\xeb\xc3\xe7\xd2\x7f\xcc\x65\x93\xdf\x13\x56\x64\xac\x61\x55\xad\x48\x4e\x56\xd0\x6d\x5f\x1a\xbc\xe5\x19\x42\xad\xfc\xfc\x74\xc9\x2e\xff\x9f\x66\x19\x2d\x2e\xda\x89\xfa\x30\x4f\x6f\xb7\x2d\xe5\x77\xbb\xb3\x43\x77\xb5\x6c\x04\x95\xae\xfe\x2f\x5a\xf8\x0b\xd8\x87\x62\x59\xf2\x44\x74\x35\x5a\x53\x1d\xa7\x18\xfd\x24\x8b\x82\xad\x38\x34\xf0\x9a\x2a\x41\x35\xcc\xbc\xa0\xb1\x66\x52\xa0\x5c\xc9\x15\xa7\x19\x92\x0a\xd9\x22\x95\xc8\x7b\x81\x4f\xf8\xa6\xb2\xa9\xd5\x62\xd5\x2e\x48\x07\xcb\xef\x99\x60\x62\x83\xbe\xe3\x72\x45\x38\xfa\x99\xc2\x8e\x62\xee\xa5\x83\xe5\xf3\x8c\x94\xbc\x3f\xd1\x45\xd4\x2d\x69\x53\x26\x0e\x44\x43\x03\x68\x3e\xeb\x9e\x65\x5f\xe6\x8e\xf1\x8c\x8e\x4c\x6c\x9c\xe5\x07\xa9\x09\x47\xef\x49\x91\x2a\xa2\x29\xea\x65\x94\x88\xf3\x56\xbd\x3d\x45\x0c\xdd\x59\x53\x5c\x5a\x5d\x64\xf8\xfa\xa2\x11\x79\x6c\x0d\x6a\x37\xe6\x7b\xac\x53\xe6\x05\x61\x0b\xde\x99\xa7\x41\x0d\x6f\xf7\xc2\x8d\xfc\x7d\x9f\x3a\xf2\xa1\x8e\x6d\xb7\xdf\x13\x9d\x62\xb3\xf1\xe9\xf5\x6c\x4c\x6b\x30\xf2\x63\x5a\x19\xf9\x11\x6c\xf4\x02\xdf\xf7\xcd\xc7\x39\xfa\x0b\xec\x04\xce\xe1\x65\xb7\x43\xdf\xa7\x5e\x31\xf7\xd2\xa0\xa5\x62\xdb\x1b\x87\x6f\xed\x97\x76\x93\xf2\x6c\xbf\xf2\xa5\xa7\xef\x17\xc9\x4b\x88\xd4\xe2\x25\x53\xf6\x05\xe6\x66\x88\xec\x26\xe7\x70\x86\x06\x27\x67\x68\xf9\x6d\x1c\xd3\x5c\xd3\xa4\x89\xf5\x1a\x7f\x58\xe3\xaf\x24\x4f\x60\xca\xec\x34\xad\x61\xce\x3e\x16\xb5\x49\xae\x1d\x55\xf4\x13\x8d\x35\x6d\x01\x76\xbb\xb9\x97\x0e\x9f\x9b\xa0\x7f\x58\xed\x9f\x2b\x81\x2f\x55\xfb\x8b\x28\xf8\x22\xcd\xfe\x26\xee\x08\x67\x2f\x56\x8c\x59\xf4\x97\xea\xf5\xbf\x2b\xb2\x2f\x4b\xa5\xa0\xfe\xfe\x2a\xd5\xed\x8b\xf2\x11\x6c\xf4\x32\x9a\x49\xf5\x3f\x1f\xe8\x57\xb9\x8c\xd3\xa7\xb3\xd2\x4c\x44\x6c\x6d\xf9\x08\xdb\x1b\x4c\x01\xf9\x9f\x1c\xc2\xef\x4d\x09\x3a\xa1\xd1\xab\x93\x2a\xd9\x8a\x65\x12\x24\xfa\x77\xc4\x59\xc6\xf4\x07\x19\x8d\xa3\xf0\x9f\x15\xc8\x6f\xd9\x7a\xcd\xe2\x92\xeb\xc7\x93\x5e\x7b\x9a\xc1\x0f\xd4\x4d\x1a\xea\x7d\x16\x3f\x48\xe5\xc8\x43\x36\x99\xcf\x8b\x8c\x70\xbe\xfc\xee\xfd\xdc\xb3\x4f\xf3\x95\x5a\x7e\xb9\x35\xf0\x5c\x13\xf0\x5c\xc0\x7f\x3e\x2f\xb7\xa1\x29\xdb\xa4\x71\x4a\xa0\x17\x82\xb8\xde\x28\x92\xa7\x4d\xc9\xab\x4e\x77\x86\x3e\x14\x3c\x24\x73\x5d\x2c\x9c\xad\x20\x77\x6c\x43\xb4\x54\xd1\xb6\xa0\x8a\xd1\x22\xda\x42\xdb\x15\x75\x89\xa2\xa4\xc8\x39\x13\xb4\xdb\xb7\x07\x81\xdd\x57\xc1\x6c\x36\xf3\xfd\x6e\x1f\x46\x7f\x35\x87\x61\x41\xdf\x6c\xcb\x7e\xcc\x49\xcc\xf4\x63\x84\x7c\x1c\xec\x76\xfd\x22\x56\x92\xf3\x15\x51\xd1\x96\x0a\xb2\xe2\x34\x89\xa0\xd9\xea\xaf\x88\x7a\x63\xa2\xf1\x67\x92\xb0\xb2\x88\xc2\xfd\x48\xcd\xce\x76\x5e\x47\x58\x5a\x91\xf8\xf6\x4d\x73\x30\x79\x69\xd5\x11\x12\x74\xb3\xb0\x16\x8f\x70\xd7\x57\xd0\x4d\xfe\x42\x39\x8d\x8d\x61\x96\x67\x11\x5d\x6f\x63\x59\x0a\x1d\x05\xa3\xbe\xb5\x31\x63\xa2\xd4\xc0\x83\x3e\xe8\xa8\x1b\x8c\xb2\xee\xae\x5f\xe3\x54\x28\xa9\x2c\x55\x83\x90\xee\xe1\x83\x13\xf0\x41\x0b\x3e\x3e\x01\x1f\xb7\xe0\x41\x78\x4a\x40\x98\x3e\xd5\x20\x21\x8f\x0d\x3c\x01\xb0\x19\x46\x5d\xc2\x79\x35\x8e\xba\xdf\x72\xde\xdd\xdd\xf4\x99\xc8\x4b\x7d\x55\x79\x1c\xad\x09\x2f\x68\xbf\x30\x6e\x80\xf7\xe1\xae\xcf\xe9\x86\x8a\x64\x3f\x2b\x06\x65\xd7\x7f\xf8\xf6\x81\x35\x13\x9f\x10\x4d\xa1\x27\xee\xee\xfa\x8f\x66\xfc\x7a\x2b\xf3\x5c\x16\x4c\x53\x8b\xdf\x37\x1d\x76\x11\x6d\xed\xc1\x66\x97\xd3\xb5\xee\xf6\x1f\x22\x34\xd8\xf5\xab\x18\xeb\x4e\xfc\xd7\xdd\xbe\xb9\xb3\x88\xb6\x56\xf7\x7d\xaf\x08\xad\xd2\x79\x77\xd7\x8a\xa2\x70\xd7\xff\x13\x32\x0e\xd8\x36\x9d\x4c\x77\xd7\x87\x66\xb2\x3b\x19\xbd\xee\x36\x6a\x84\xf0\x22\xd7\xeb\x82\xea\xc8\x3f\x10\x78\xd3\xcf\xb9\xd4\x3f\xe6\x86\x36\xda\x42\xb4\x47\xdb\x3a\xce\x43\xff\xcd\xbb\x3a\xce\x2f\x9f\x8d\xfd\xb0\x9f\x11\x75\x4b\x55\xb4\xdd\x8f\x0d\x0e\x68\xd6\xe6\xaf\xbb\xdb\xc1\x0a\x2a\x33\xb1\x97\x30\x1c\x8e\xa6\x93\xe9\xa1\x84\xf6\xd8\x9f\x97\x50\xaf\x5e\x22\x58\x46\xc0\xaa\x6a\x72\x1b\xc8\xf5\xcd\xce\x6e\x9b\x16\x8e\x49\x11\x6f\x89\x26\xce\x0b\xd2\xd4\xcb\x36\x2b\x6f\xcd\x2d\x52\xf1\x07\xfb\x13\x0d\x61\xe7\x2a\x5a\xe4\x52\x14\xe6\xdc\xcc\x32\x30\xe3\x07\x48\xc8\xa2\xda\xe2\xb5\xaf\xba\x73\x5d\xdd\xc3\x55\x6f\x6a\x9f\x82\x75\xba\x7c\x35\xf7\x74\x7a\x30\xf2\x03\xc9\xe8\x93\xc1\x2b\xb1\x61\x82\xa2\x4b\x2e\xe3\xdb\x27\xc0\xef\x4d\x2f\xf0\x59\xe0\x93\xe1\x27\xfb\xa0\x23\xf8\x07\x9a\xe5\x54\x11\x5d\xaa\xa7\xca\xbc\x23\x02\xfd\x92\x53\xe8\x1b\xdb\x90\xaf\x5c\x17\xcd\xcd\xd1\x84\x4e\x97\xd5\x69\x82\x9d\x9e\xc6\x66\x00\xed\x9d\x31\xd7\x50\x14\x5a\x9e\x81\x8d\xb7\xa2\x39\x25\x7a\xe1\xd8\x3b\x3e\xc4\x04\xb2\x75\xd1\xbe\x17\xad\x8e\x47\x27\xf5\x81\x5b\xf0\x1a\x5a\xc1\xaf\x99\x48\xe8\x03\x14\x72\x9d\xb4\xb1\x96\xdb\xad\x25\xc6\x82\x64\xf4\x73\x70\x6a\xbc\xfc\x31\x06\x47\xa2\x25\xf2\xd1\x5f\xd1\x29\x48\x54\x8f\x66\xe4\xc1\x0e\xc1\x6e\xea\xfd\xef\xcf\x33\xb6\xdd\xda\x1f\xe0\xb6\x7a\x81\x03\x32\x2f\xf0\xc3\xa1\xf9\x38\x07\xda\x37\x9f\x27\xad\x69\xff\xcc\x1e\xf0\x05\xaa\xe8\x7d\x3c\x1c\x70\xf8\xcf\xff\x78\x11\xf9\x9a\x88\x8f\x39\x55\xd0\x91\x9e\xef\x76\xaf\x0f\x69\x6c\xe0\x1c\xcc\x66\x7d\x9e\x52\x77\xfb\x5a\xa0\x95\x16\x6e\x91\x99\xaf\x5c\xb1\x8c\x40\xf7\x7b\x70\x48\xbf\xe1\x8f\x79\xca\x62\x29\x50\xf3\xe4\x16\x6c\x23\x08\x6f\x8e\xed\x9b\x63\x12\xa3\xc0\xe9\x18\xad\x03\xb1\x48\xe5\xfd\xc2\x61\xc5\x55\x96\xeb\xc7\xde\x41\x10\x9e\x1f\x46\x61\x2c\x39\x70\x5f\x38\x53\x67\x39\xcf\x0f\xfa\x40\x7b\x48\x84\xcc\xb3\x6d\xc7\x9d\xe5\x0f\xb2\x8a\x9f\x02\x99\x7d\xe0\xdc\xcb\x97\x6d\x87\x1c\xae\x97\xfd\x12\x99\x7b\x26\xc1\x9c\x3e\xd5\x6b\x32\x5f\x73\x15\x64\xaf\x21\x9d\x97\x9c\xe9\xd5\x69\xb2\xe4\xdc\xdc\xcc\xd5\x39\xae\xed\x5d\x63\x42\x56\x6a\x9a\x20\x7b\x03\x0a\x93\xf4\x05\x8e\xee\xab\x4b\x91\xb9\x47\x96\x27\x2f\x46\x56\x4b\x84\xd0\x7c\xb5\x7c\x2b\x05\xa9\xf6\xff\xab\x25\xba\xfa\xf0\xde\xbb\xfa\x70\x19\xa1\x27\x0a\x50\x9d\x52\x55\xc4\x44\x60\x26\x3d\x92\x24\x8a\x16\x85\xe7\x3f\x0c\xe9\x78\x3d\x0d\x06\xa3\xf5\xcc\x9f\x91\xd9\x70\x30\x18\x0e\xd7\xfe\x78\x44\x66\x34\x0e\x57\x34\x89\xe3\x60\x18\x4f\x46\x7e\xf2\x54\xbf\x97\xd3\xd6\xb7\x38\xcf\x34\xcb\xe0\xdd\xf6\xdd\xc7\x33\xee\x35\x7e\x2d\x73\xe8\x67\x8c\xa9\xf5\x3e\xc6\x0e\xed\x76\xa8\x77\x77\x7d\x8d\xab\xcb\x08\xe3\xa2\xe6\x18\xf0\xb4\xe0\x98\x53\xa2\xd6\xec\x01\x56\xc1\xb3\x51\x73\x74\xc9\x29\x13\x8a\x3f\xfd\x56\x52\xf5\x68\xa6\xb2\x7a\xcc\x98\x78\xf2\xdb\x84\x43\x42\x41\x75\x22\xc8\x33\xbf\xac\x80\x81\xea\x87\x15\x9f\x8a\xa3\x5f\x55\x7c\x9e\xed\x1f\x5c\xba\x36\x7b\x88\xc2\x1b\x61\x1f\x07\xa1\x19\x29\xb4\x8c\x6f\x9f\x61\xbc\x3c\xeb\xdc\x11\x85\x48\x9e\xa3\x05\xaa\xaf\x68\x33\x99\x94\x9c\xf6\xba\x36\x62\xbb\x7d\x74\x7d\x73\x7e\x71\x76\xd6\x21\x79\x8e\x13\xa6\xa8\xb9\x37\xeb\x75\x1b\x69\xdd\x3e\x5a\x97\xc2\x9c\x9f\xf6\xce\xcd\x55\xb2\xa2\xba\x54\xc2\x3c\x76\x14\x2d\xb4\x62\x31\xf4\xba\x97\xdf\x76\xfb\x30\x54\xc4\x12\xfa\x60\x03\xee\x40\x5f\x13\xa1\xee\xc2\x82\x76\xe6\x93\x33\x71\x1b\xed\x99\x1a\xfc\x3e\xa2\x3c\xeb\x23\xa2\xb5\x2a\xce\x2b\x5a\x03\xc0\x5f\x9b\x9f\xaa\xf4\xcc\x39\xb5\xd3\xd2\x45\xd0\xfb\x7f\x21\xbc\xa4\x35\x76\x87\xad\x51\x33\x88\x16\x0b\x54\x8a\x84\xae\x99\xa0\xc9\x39\xb2\x1a\x5f\x58\x3c\xd8\x60\xa1\x05\xaa\xb8\xd3\x3b\xc2\x7b\x46\x2c\x06\xc0\x79\x0b\x09\xdb\x06\x0d\x2d\x50\xcd\xb6\x02\xbe\x6f\x66\x02\x1b\xf7\x5f\xc2\x73\x8f\xf2\x0c\x03\xa3\x5e\x97\x25\xdd\xf3\x3e\x6a\xb1\xdb\xf5\x11\xec\xb3\xec\xdb\xee\xac\xd3\xd9\x5d\x9c\x75\x76\x8d\xdb\xf7\xd7\xe2\xbd\x6e\x73\x2d\xde\xf6\xfb\xd7\x95\x8f\xbe\x86\xf5\xdf\x47\x5f\xc3\x1a\x91\xa5\xb6\xa6\x5b\x20\x86\x72\x84\x16\xe8\x9e\x89\x44\xde\x9b\xb7\x8b\x3d\xb0\x39\xe4\x47\x0b\xbb\xfd\x00\xd1\x26\x38\x60\xe7\x96\x33\xb1\xf9\xbb\x60\xc6\x2d\xd7\xe8\xfa\x0c\xb5\xfe\x9a\xbd\xd8\xc1\xe8\x75\xe0\xdf\x34\x03\x37\xe8\xc6\xb0\xab\x64\x35\x4d\x2c\x70\x03\x83\xb7\x0e\xe4\x39\x27\x72\xea\x76\xcc\xe9\x23\xc7\xfc\x2a\x2b\x72\xa0\xbf\x87\x57\x50\xf0\xbb\x4a\x15\x27\xda\x3a\x6b\xa9\x62\xea\xd8\xdd\x29\x72\x4a\x50\xce\x89\x0e\x95\xdd\x01\x17\x29\xb9\x66\x39\x50\xe4\x92\x09\xfd\x4e\xaa\x8c\x68\x27\xea\xda\xb4\x53\x6d\xb0\x6d\x73\xbf\x35\x18\xd8\xbc\xec\x9c\xe5\xbf\x95\xe1\xe8\xf2\x5d\x95\x57\x10\xaa\x76\xd9\xb6\x7b\x8a\x20\x17\x57\xf8\x8f\x11\x0e\xd7\x75\x0f\xb1\x5a\xce\x57\xca\x5b\x76\x77\x95\xca\x0e\x74\xef\xfd\x03\x23\x9b\x8d\x4f\xcb\x4a\xbb\xcb\x80\x01\xb3\x73\x73\x22\x14\xfc\xf7\x6d\x6e\xe4\x9e\x75\x3a\x07\x8e\xdf\x50\x6d\xef\x44\x16\xad\x15\x6b\x16\x07\x4c\x34\x84\xce\xcf\xf4\xb7\x92\x16\x1a\x2d\x6c\x24\xf5\xec\xca\xc9\xa8\x4e\x65\x12\xa1\xee\x77\x57\x1f\xec\x3a\xed\x94\x8a\x47\xa8\xeb\x91\x9c\x79\x77\x81\x67\x62\xb2\x6b\x36\x1c\xbb\x73\xac\x53\x2a\x7a\x8d\x80\x6a\xcf\xd0\x2c\xc3\xe7\x03\xae\x05\x2d\x2a\x35\x6b\x62\x83\x6e\x17\x47\xff\x48\xf5\x53\x0c\xc1\x43\x16\xdb\xac\xa8\xdd\x91\x13\x2e\x5b\x01\x78\xc2\x11\xf5\xf1\xe9\xff\xa7\x8f\xe0\x88\x96\x46\xed\xb2\xfc\x8d\x83\x9b\x73\x56\x7b\x92\xed\xd4\x0c\xcc\xf5\xc3\x7b\x52\x40\x28\xff\x21\x13\x83\xdc\xf4\xa9\xce\xd9\x17\x98\x8e\x66\x81\xfd\xd5\xc6\xec\xa2\xfb\xcd\x91\x4a\xdf\x74\xfb\xdd\x6f\x5a\x76\xbe\x6c\xea\x20\x81\x1e\xcc\xc8\xf5\x11\xdb\x9b\x26\xd7\x1e\x2f\xf5\x6b\xff\xc6\x50\x1c\xcf\xe9\x13\x0e\x17\xcf\xd0\x07\xcf\xd0\xb7\x8c\xa8\x68\x77\xcf\x4f\xbc\x89\xfe\x9e\x49\xab\x9d\x82\xea\x0f\x36\x4b\xf6\x8e\x62\xe0\x44\xa0\xf4\x2c\xbb\x3e\x32\x9b\x87\x36\x57\x33\xa5\x7f\x83\x96\xf6\x8e\xf0\xa7\xf1\x54\x67\xe2\xde\x51\x89\x3c\xa9\xd5\xf1\x02\xa8\xd9\x56\xb0\x5d\x1f\x8d\x40\xfc\xb1\x61\xc6\x49\xff\x98\x0a\x47\x86\x9e\x66\xbd\x57\x63\xec\x9f\xd2\xa3\xda\x24\xb4\x35\x90\xab\x4f\x95\x30\x88\x1d\xb9\xfa\x04\x75\x57\x94\x9c\xd7\x25\x77\xbf\x54\x2b\x04\xcc\xa9\xd8\xe8\x14\xf6\x9d\xe7\x50\x3b\x2a\xb4\x7d\x8a\x38\xc2\x5b\x2c\x16\x06\xf3\x98\xdd\x5a\x2a\xd4\x83\x75\x74\x4b\x1f\x61\xfb\xbc\xd7\xc4\x70\x48\x49\xf1\xe3\xbd\xf8\x49\xc9\x9c\x2a\xfd\x88\x63\xc2\x39\x70\xed\x03\xfa\xf9\xf9\x53\xa9\x3b\xdb\xcb\x1c\xc8\x38\x30\xbe\x28\x57\x85\x56\x6d\xdb\x0b\xad\xfa\x28\xef\xa3\xba\x5d\xa9\xa8\x0b\xad\x2a\xe4\x9e\x01\x3e\xe5\xf4\x74\xea\x9f\x9d\x0d\x13\xe6\xed\xdf\xd3\xd9\x7d\xd2\xdc\xb3\x3f\x89\xfe\xaf\x00\x00\x00\xff\xff\xd2\xf5\x0e\x84\x23\x2d\x00\x00")

func templatesDashboardHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesDashboardHtml,
		"templates/dashboard.html",
	)
}

func templatesDashboardHtml() (*asset, error) {
	bytes, err := templatesDashboardHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dashboard.html", size: 11555, mode: os.FileMode(420), modTime: time.Unix(1505783618, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/dashboard.html": templatesDashboardHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"dashboard.html": &bintree{templatesDashboardHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

